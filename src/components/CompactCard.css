:root {
  --card-width: 43vh;
  --card-height: calc(var(--card-width) * .09);
  --card-border-radius: calc(var(--card-width) * 0.02);
  --card-border-width: calc(var(--card-width) * 0.005);
  --cost-width: calc(var(--card-width) * 0.2);
}

.compact-card {
  width: var(--card-width);
  height: var(--card-height);
  right: 1%;
  display: flex;
  align-items: center;
  background: linear-gradient(
    45deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  background-color: rgba(0, 0, 0, 0.9);
  border-radius: var(--card-border-radius);
  cursor: pointer;
  position: relative;
  margin-bottom: calc(var(--card-height) * 0.1);
  border: var(--card-border-width) solid transparent;
  transition: transform 0.2s ease-in-out, border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out, left 0.2s ease-in-out;
  overflow: hidden;
}

.card-background {
  position: absolute;
  top: 0;
  right: calc(30% - var(--cost-width));
  width: calc(50% - var(--cost-width));
  height: 100%;
  background-size: cover;
  background-position: right center;
  opacity: 1;
  z-index: 1;
  mask-image: linear-gradient(to right, transparent, black 50%);
  -webkit-mask-image: linear-gradient(to right, transparent, black 50%);
}

.card-background::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: inherit;
  background-size: cover;
  background-position: right center;
  mask-image: linear-gradient(to right, transparent, black 50%);
  -webkit-mask-image: linear-gradient(to right, transparent, black 50%);
}

.vpet-sprite {
  width: 16px;
  height: 16px;
  background-size: 48px 64px; 
  background-repeat: no-repeat;
  position: relative;
  z-index: 2;
  margin-right: calc(0.5 * var(--battle-vh));
  transform: scale(2.75);  
  transform-origin: left center;
  image-rendering: pixelated;  
}

.card-info {
  display: flex;
  flex-direction: column;
  margin-left: calc(var(--card-width) * 0.075);
  flex-grow: 1;
  position: relative;
  z-index: 2;
}

.ccard-name {
  color: #f0f6f0;
  font-size: calc(var(--card-width) * 0.035);
  font-weight: bold;
  text-shadow: 0 0 calc(var(--card-width) * 0.02) rgba(0, 0, 0, 0.5);
}

.ccard-cost {
  position: absolute;
  top: 0;
  right: 0;
  width: calc(var(--cost-width) * 0.65);
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  color: #f0f6f0;
  font-size: calc(var(--card-width) * 0.05);
  font-weight: 900;
  transition: all 0.3s ease-in-out;
  z-index: 5;
  border-radius: 50px;
  overflow: hidden;
  text-shadow: 
    0 1px 0 #f4f4f4,
    0 2px 0 #94b0c2,
    0 3px 0 #566c86,
    0 4px 0 #333c57,
    0 5px 0 #1a1c2c,
    0 6px 1px rgba(0,0,0,.1),
    0 0 5px rgba(0,0,0,.1),
    0 1px 3px rgba(0,0,0,.3),
    0 3px 5px rgba(0,0,0,.2),
    0 5px 10px rgba(0,0,0,.25),
    0 10px 10px rgba(0,0,0,.1),
    0 20px 20px rgba(0,0,0,.05);
  clip-path: polygon(25% 0%, 100% 0%, 100% 100%, 25% 100%, 0% 50%);
  background: linear-gradient(145deg, #ffd700, #ffec80);
}

.ccard-cost.playable::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(145deg, #e6c019, #ffe448);
  z-index: -1;
  transition: all 0.3s ease-in-out;
  transform: translateX(-100%);
}

.ccard-cost.playable::after {
  content: '';
  position: absolute;
  top: 2px;
  left: 2px;
  right: 2px;
  bottom: 2px;
  background: linear-gradient(145deg, #222323, #566c86);
  filter: brightness(0.8);
  z-index: -2;
  clip-path: polygon(25% 0%, 100% 0%, 100% 100%, 25% 100%, 0% 50%);
}

.ccard-cost.playable {
  box-shadow: 
    inset 0 0 10px rgba(255, 255, 255, 0.6),
    0 0 15px rgba(255, 215, 0, 0.8),
    0 0 30px rgba(255, 215, 0, 0.6);
}

.ccard-cost.not-playable {
  box-shadow: 
    inset 0 0 10px rgba(0, 0, 0, 0.6),
    0 0 15px rgba(0, 0, 0, 0.8),
    0 0 30px rgba(255, 215, 0, 0.6);
  text-shadow: 
    0 1px 0 #222323,
    0 2px 0 #222323,
    0 3px 0 #222323,
    0 4px 0 #222323,
    0 5px 0 #1a1c2c,
    0 6px 1px rgba(0,0,0,.1),
    0 0 5px rgba(0,0,0,.1),
    0 1px 3px rgba(0,0,0,.3),
    0 3px 5px rgba(0,0,0,.2),
    0 5px 10px rgba(0,0,0,.25),
    0 10px 10px rgba(0,0,0,.1),
    0 20px 20px rgba(0,0,0,.05);
  clip-path: polygon(25% 0%, 100% 0%, 100% 100%, 25% 100%, 0% 50%);
  background: linear-gradient(145deg, #222323, #566c86);
}

.compact-card:hover .ccard-cost::before {
  transform: translateX(0);
}

.compact-card:hover .ccard-cost.playable {
  font-size: calc(var(--card-width) * 0.066);
}

.compact-card:hover {
  transform: translateY(calc(-0.3 * var(--battle-vh)));
}

.compact-card.playable {
  left: 1%;
  border-color: #ffd700;
  box-shadow: 0 0 calc(var(--card-width) * 0.05) rgba(229, 255, 0, 0.5);
}

.compact-card.selected {
  box-shadow: 0 0 calc(var(--card-width) * 0.1) #5efdf7;
  transform: translateY(calc(var(--card-height) * -0.05));
  border: calc(var(--card-border-width) * 1) solid #5efdf7;
  animation: selectCard 0.2s ease-in-out forwards;
}

@keyframes selectCard {
  0% { left: 0; }
  100% { left: calc(var(--card-width) * 0.1); }
}

.compact-card.disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.compact-card.top-card {
  box-shadow: 0 0 calc(var(--card-width) * 0.1) rgba(255, 0, 0, 0.7);
  animation: pulse 1s infinite alternate;
}

.compact-card.draw-animation {
  animation: drawCard 0.4s ease-out;
}

@keyframes drawCard {
  0% { transform: translateX(-100%) translateY(10%); opacity: 0; }
  33% { transform: translateX(-50%) translateY(10%); opacity: 0; }
  100% { transform: translateX(0) translateY(0); opacity: 1; }
}

.card-animation.burn {
  position: fixed;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  animation: burnCard 1s forwards;
  z-index: 9999;
  pointer-events: none;
  border: calc(var(--card-border-width) * 0.5) solid red;
}

@keyframes pulse {
  0% { box-shadow: 0 0 10px 3px rgba(255, 0, 0, 0.3); }
  100% { box-shadow: 0 0 20px 8px rgba(255, 0, 0, 0.6); }
}

@keyframes burnCard {
  0% {
    transform: translate(0, 0) rotate(0deg);
    opacity: 1;
  }
  50% {
    transform: translate(50%, -50%) rotate(45deg) scale(0.75);
    opacity: 0.5;
  }
  100% {
    transform: translate(100%, -100%) rotate(90deg) scale(0.5);
    opacity: 0;
  }
}